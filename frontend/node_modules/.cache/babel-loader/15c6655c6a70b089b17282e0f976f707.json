{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdh1\\\\Desktop\\\\Library\\\\library_management\\\\frontend\\\\src\\\\containers\\\\System\\\\ModalAddNewUser.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { emitter } from '../../utils/emitter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggelAddNewUser();\n    };\n\n    this.handleOnChangeInput = (event, type) => {\n      let copyState = { ...this.state\n      };\n      copyState[type] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleAddNewUser = () => {\n      let isValid = this.checkValidateInput();\n\n      if (isValid) {\n        //call API\n        this.props.createNewUser(this.state);\n      }\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrInput = ['email', 'password', 'firstName', 'lastName', 'phone'];\n\n      for (let i = 0; i < arrInput.length; i++) {\n        if (!this.state[arrInput[i]]) {\n          isValid = false;\n          alert('Missing required parameter: ' + arrInput[i]);\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      phone: ''\n    };\n    this.listenToEmitter();\n  }\n\n  listenToEmitter() {\n    emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\n      this.setState({\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: '',\n        phone: ''\n      });\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"model-user-container\",\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Add new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail4\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              class: \"form-control\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: this.state.email,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"email\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword4\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              class: \"form-control\",\n              name: \"password\",\n              placeholder: \"Password\",\n              value: this.state.password,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"password\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputFirstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            name: \"firstName\",\n            placeholder: \"First Name\",\n            value: this.state.firstName,\n            onChange: event => {\n              this.handleOnChangeInput(event, \"firstName\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputLastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            name: \"lastName\",\n            placeholder: \"Last Name\",\n            value: this.state.lastName,\n            onChange: event => {\n              this.handleOnChangeInput(event, \"lastName\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPhone\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              class: \"form-control\",\n              name: \"phone\",\n              placeholder: \"Phone\",\n              value: this.state.phone,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"phone\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputRole\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role_id\",\n              class: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                selected: true,\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Staff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"px-3\",\n          color: \"primary\",\n          onClick: () => {\n            this.handleAddNewUser();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          className: \"px-3\",\n          color: \"secondary\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["C:/Users/qdh1/Desktop/Library/library_management/frontend/src/containers/System/ModalAddNewUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","emitter","ModalUser","constructor","props","toggle","toggelAddNewUser","handleOnChangeInput","event","type","copyState","state","target","value","setState","handleAddNewUser","isValid","checkValidateInput","createNewUser","arrInput","i","length","alert","email","password","firstName","lastName","phone","listenToEmitter","on","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\n\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n        }\r\n\r\n        this.listenToEmitter();\r\n    }\r\n\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phone: '',\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggelAddNewUser();\r\n    }\r\n\r\n    handleOnChangeInput = (event, type) => {\r\n        let copyState = { ...this.state };\r\n        copyState[type] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            //call API\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'phone'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing required parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                className='model-user-container'\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                size='lg'\r\n                centered\r\n            >\r\n                <ModalHeader toggle={() => { this.toggle() }}>Add new user</ModalHeader>\r\n                <ModalBody>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"input-container\">\r\n                            <label for=\"inputEmail4\">Email</label>\r\n                            <input type=\"email\"\r\n                                class=\"form-control\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"input-container\">\r\n                            <label for=\"inputPassword4\">Password</label>\r\n                            <input type=\"password\"\r\n                                class=\"form-control\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputFirstName\">First Name</label>\r\n                        <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"First Name\"\r\n                            value={this.state.firstName}\r\n                            onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                        />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputLastName\">Last Name</label>\r\n                        <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Last Name\"\r\n                            value={this.state.lastName}\r\n                            onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                        />\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"inputPhone\">Phone</label>\r\n                            <input type=\"number\"\r\n                                class=\"form-control\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Phone\"\r\n                                value={this.state.phone}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"phone\") }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"inputRole\">Role</label>\r\n                            <select name=\"role_id\" class=\"form-control\">\r\n                                <option value=\"1\" selected>User</option>\r\n                                <option value=\"2\">Staff</option>\r\n                                <option value=\"3\">Admin</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"px-3\"\r\n                        color=\"primary\"\r\n                        onClick={() => { this.handleAddNewUser() }}>\r\n                        Add\r\n                    </Button>{' '}\r\n                    <Button className=\"px-3\"\r\n                        color=\"secondary\"\r\n                        onClick={() => { this.toggle() }}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n"]},"metadata":{},"sourceType":"module"}
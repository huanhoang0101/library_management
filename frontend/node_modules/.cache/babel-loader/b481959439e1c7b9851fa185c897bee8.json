{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdh1\\\\Desktop\\\\Library\\\\library_management\\\\frontend\\\\src\\\\containers\\\\System\\\\UserManage.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './UserManage.scss';\nimport { getAllUsersService, createNewUserService, deleteUserService } from '../../services/userService';\nimport ModalAddNewUser from './ModalAddNewUser';\nimport ModalEditUser from './ModalEditUser';\nimport { emitter } from \"../../utils/emitter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserManage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllUsers = async () => {\n      let response = await getAllUsersService();\n\n      if (response && response.errCode === 0) {\n        this.setState({\n          arrUsers: response.users\n        });\n      }\n    };\n\n    this.handleAddNewUser = () => {\n      this.setState({\n        isOpenModalAddNewUser: true\n      });\n    };\n\n    this.handleEditUser = user => {\n      this.setState({\n        isOpenModalEditUser: true,\n        editUser: user\n      });\n    };\n\n    this.toggelAddNewUser = () => {\n      this.setState({\n        isOpenModalAddNewUser: !this.state.isOpenModalAddNewUser\n      });\n    };\n\n    this.toggelEditUser = () => {\n      this.setState({\n        isOpenModalEditUser: !this.state.isOpenModalEditUser\n      });\n    };\n\n    this.createNewUser = async data => {\n      try {\n        let response = await createNewUserService(data);\n\n        if (response && response.errCode !== 0) {\n          alert(response.errMessage);\n        } else {\n          await this.getAllUsers();\n          this.setState({\n            isOpenModalAddNewUser: false\n          });\n          emitter.emit('EVENT_CLEAR_MODAL_DATA');\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.editUser = async data => {\n      /* try {\r\n          let response = await editUserService(data);\r\n          if (response && response.errCode !== 0) {\r\n              alert(response.errMessage)\r\n          } else {\r\n              await this.getAllUsers();\r\n              this.setState({\r\n                  isOpenModalEditUser: false\r\n              })\r\n          }\r\n      } catch (e) {\r\n          console.log(e);\r\n      } */\n      alert(\"edit\");\n    };\n\n    this.handleDeleteUser = async userId => {\n      try {\n        let response = await deleteUserService(userId);\n\n        if (response && response.errCode === 0) {\n          await this.getAllUsers();\n        } else {\n          alert(response.errMessage);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      arrUsers: [],\n      isOpenModalAddNewUser: false,\n      isOpenModalEditUser: false,\n      editUser: {}\n    };\n  }\n\n  async componentDidMount() {\n    await this.getAllUsers();\n  }\n\n  render() {\n    let arrUsers = this.state.arrUsers;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-container\",\n      children: [/*#__PURE__*/_jsxDEV(ModalAddNewUser, {\n        isOpen: this.state.isOpenModalAddNewUser,\n        toggelAddNewUser: this.toggelAddNewUser,\n        createNewUser: this.createNewUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalEditUser, {\n        isOpen: this.state.isOpenModalEditUser,\n        toggelEditUser: this.toggelEditUser,\n        editUser: this.editUser,\n        currentUser: this.state.editUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center title\",\n        children: \"Manage users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-1\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-5 px-3\",\n          onClick: () => this.handleAddNewUser(),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 22\n          }, this), \" Add new user\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-table mt-3 mx-5\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"customers\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), arrUsers && arrUsers.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-edit\",\n                  onClick: () => this.handleDeleteUser(item.id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-pencil-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-delete\",\n                  onClick: () => this.handleEditUser(item),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);","map":{"version":3,"sources":["C:/Users/qdh1/Desktop/Library/library_management/frontend/src/containers/System/UserManage.js"],"names":["React","Component","FormattedMessage","connect","getAllUsersService","createNewUserService","deleteUserService","ModalAddNewUser","ModalEditUser","emitter","UserManage","constructor","props","getAllUsers","response","errCode","setState","arrUsers","users","handleAddNewUser","isOpenModalAddNewUser","handleEditUser","user","isOpenModalEditUser","editUser","toggelAddNewUser","state","toggelEditUser","createNewUser","data","alert","errMessage","emit","e","console","log","handleDeleteUser","userId","componentDidMount","render","map","item","index","email","firstName","lastName","phone","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss';\r\nimport { getAllUsersService, createNewUserService, deleteUserService } from '../../services/userService';\r\nimport ModalAddNewUser from './ModalAddNewUser';\r\nimport ModalEditUser from './ModalEditUser';\r\nimport { emitter } from \"../../utils/emitter\"\r\n\r\nclass UserManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalAddNewUser: false,\r\n            isOpenModalEditUser: false,\r\n            editUser: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers = async () => {\r\n        let response = await getAllUsersService();\r\n        if (response && response.errCode === 0) {\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalAddNewUser: true\r\n        })\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n            editUser: user\r\n        })\r\n    }\r\n\r\n    toggelAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalAddNewUser: !this.state.isOpenModalAddNewUser\r\n        })\r\n    }\r\n\r\n    toggelEditUser = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\r\n        })\r\n    }\r\n\r\n    createNewUser = async (data) => {\r\n        try {\r\n            let response = await createNewUserService(data);\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.errMessage)\r\n            } else {\r\n                await this.getAllUsers();\r\n                this.setState({\r\n                    isOpenModalAddNewUser: false\r\n                })\r\n                emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    editUser = async (data) => {\r\n        /* try {\r\n            let response = await editUserService(data);\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.errMessage)\r\n            } else {\r\n                await this.getAllUsers();\r\n                this.setState({\r\n                    isOpenModalEditUser: false\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        } */\r\n        alert(\"edit\")\r\n    }\r\n\r\n    handleDeleteUser = async (userId) => {\r\n        try {\r\n            let response = await deleteUserService(userId);\r\n            if (response && response.errCode === 0) {\r\n                await this.getAllUsers();\r\n            } else {\r\n                alert(response.errMessage)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let arrUsers = this.state.arrUsers;\r\n        return (\r\n            <div className='user-container'>\r\n                <ModalAddNewUser\r\n                    isOpen={this.state.isOpenModalAddNewUser}\r\n                    toggelAddNewUser={this.toggelAddNewUser}\r\n                    createNewUser={this.createNewUser}\r\n                />\r\n                <ModalEditUser\r\n                    isOpen={this.state.isOpenModalEditUser}\r\n                    toggelEditUser={this.toggelEditUser}\r\n                    editUser={this.editUser}\r\n                    currentUser={this.state.editUser}\r\n                />\r\n                <div className=\"text-center title\">Manage users</div>\r\n                <div className='mx-1'>\r\n                    <button className='btn btn-primary mx-5 px-3'\r\n                        onClick={() => this.handleAddNewUser()}\r\n                    ><i className='fas fa-plus'></i> Add new user</button>\r\n                </div>\r\n                <div className='users-table mt-3 mx-5'>\r\n                    <table id=\"customers\">\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Phone</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {arrUsers && arrUsers.map((item, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.firstName}</td>\r\n                                    <td>{item.lastName}</td>\r\n                                    <td>{item.phone}</td>\r\n                                    <td>\r\n                                        <button className='btn-edit'\r\n                                            onClick={() => this.handleDeleteUser(item.id)}>\r\n                                            <i className='fas fa-pencil-alt'></i>\r\n                                        </button>\r\n                                        <button className='btn-delete'\r\n                                            onClick={() => this.handleEditUser(item)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n"]},"metadata":{},"sourceType":"module"}
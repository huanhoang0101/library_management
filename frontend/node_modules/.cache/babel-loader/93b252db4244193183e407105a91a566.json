{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdh1\\\\Desktop\\\\Library\\\\library_management\\\\frontend\\\\src\\\\containers\\\\System\\\\ModalAddNewUser.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.props.toggelAddNewUser();\n    };\n\n    this.handleOnChangeInput = (event, type) => {\n      let copyState = { ...this.state\n      };\n      copyState[type] = event.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleAddNewUser = () => {};\n\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      phone: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"model-user-container\",\n      isOpen: this.props.isOpen,\n      toggle: () => {\n        this.toggle();\n      },\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: () => {\n          this.toggle();\n        },\n        children: \"Add new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/post-crud\",\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputEmail4\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                class: \"form-control\",\n                name: \"email\",\n                placeholder: \"Email\",\n                value: this.state.email,\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"email\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputPassword4\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                class: \"form-control\",\n                name: \"password\",\n                placeholder: \"Password\",\n                value: this.state.password,\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"password\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputFirstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              name: \"firstName\",\n              placeholder: \"First Name\",\n              value: this.state.firstName,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"firstName\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputLastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              name: \"lastName\",\n              placeholder: \"Last Name\",\n              value: this.state.lastName,\n              onChange: event => {\n                this.handleOnChangeInput(event, \"lastName\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputPhone\",\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                class: \"form-control\",\n                name: \"phone\",\n                placeholder: \"Phone\",\n                value: this.state.phone,\n                onChange: event => {\n                  this.handleOnChangeInput(event, \"phone\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group col-md-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"inputRole\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role_id\",\n                class: \"form-control\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  selected: true,\n                  children: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Staff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"px-3\",\n          color: \"primary\",\n          onClick: () => {\n            this.handleAddNewUser();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n          className: \"px-3\",\n          color: \"secondary\",\n          onClick: () => {\n            this.toggle();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);","map":{"version":3,"sources":["C:/Users/qdh1/Desktop/Library/library_management/frontend/src/containers/System/ModalAddNewUser.js"],"names":["React","Component","FormattedMessage","connect","Button","Modal","ModalHeader","ModalBody","ModalFooter","ModalUser","constructor","props","toggle","toggelAddNewUser","handleOnChangeInput","event","type","copyState","state","target","value","setState","handleAddNewUser","email","password","firstName","lastName","phone","componentDidMount","render","isOpen","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggelAddNewUser();\r\n    }\r\n\r\n    handleOnChangeInput = (event, type) => {\r\n        let copyState = { ...this.state };\r\n        copyState[type] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                className='model-user-container'\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                size='lg'\r\n                centered\r\n            >\r\n                <ModalHeader toggle={() => { this.toggle() }}>Add new user</ModalHeader>\r\n                <ModalBody>\r\n                    <form action=\"/post-crud\" method=\"post\">\r\n                        <div class=\"form-row\">\r\n                            <div class=\"input-container\">\r\n                                <label for=\"inputEmail4\">Email</label>\r\n                                <input type=\"email\"\r\n                                    class=\"form-control\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    value={this.state.email}\r\n                                    onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                                />\r\n                            </div>\r\n                            <div class=\"input-container\">\r\n                                <label for=\"inputPassword4\">Password</label>\r\n                                <input type=\"password\"\r\n                                    class=\"form-control\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={this.state.password}\r\n                                    onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"inputFirstName\">First Name</label>\r\n                            <input type=\"text\"\r\n                                class=\"form-control\"\r\n                                name=\"firstName\"\r\n                                placeholder=\"First Name\"\r\n                                value={this.state.firstName}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"inputLastName\">Last Name</label>\r\n                            <input type=\"text\"\r\n                                class=\"form-control\"\r\n                                name=\"lastName\"\r\n                                placeholder=\"Last Name\"\r\n                                value={this.state.lastName}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-row\">\r\n                            <div class=\"form-group col-md-6\">\r\n                                <label for=\"inputPhone\">Phone</label>\r\n                                <input type=\"text\"\r\n                                    class=\"form-control\"\r\n                                    name=\"phone\"\r\n                                    placeholder=\"Phone\"\r\n                                    value={this.state.phone}\r\n                                    onChange={(event) => { this.handleOnChangeInput(event, \"phone\") }}\r\n                                />\r\n                            </div>\r\n                            <div class=\"form-group col-md-4\">\r\n                                <label for=\"inputRole\">Role</label>\r\n                                <select name=\"role_id\" class=\"form-control\">\r\n                                    <option value=\"1\" selected>User</option>\r\n                                    <option value=\"2\">Staff</option>\r\n                                    <option value=\"3\">Admin</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"px-3\"\r\n                        color=\"primary\"\r\n                        onClick={() => { this.handleAddNewUser() }}>\r\n                        Add\r\n                    </Button>{' '}\r\n                    <Button className=\"px-3\"\r\n                        color=\"secondary\"\r\n                        onClick={() => { this.toggle() }}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n"]},"metadata":{},"sourceType":"module"}
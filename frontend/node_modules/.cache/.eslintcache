[{"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\index.js":"1","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\redux.js":"2","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\hoc\\IntlProviderWrapper.js":"4","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\App.js":"5","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\hoc\\authentication.js":"6","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\rootReducer.js":"7","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\actionTypes.js":"8","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\routes\\Home.js":"9","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\Header\\Header.js":"10","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\routes\\System.js":"11","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\routes\\Login.js":"12","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\CustomToast.js":"13","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\ConfirmModal.js":"14","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\index.js":"15","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\appReducer.js":"16","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\adminReducer.js":"17","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\userReducer.js":"18","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\Navigator.js":"19","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\Header\\menuApp.js":"20","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\CustomScrollbars.js":"21","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\UserManage.js":"22","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\ProductManage.js":"23","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\RegisterPackageGroupOrAcc.js":"24","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\services\\adminService.js":"25","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\index.js":"26","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\constant.js":"27","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\CommonUtils.js":"28","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\KeyCodeUtils.js":"29","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\LanguageUtils.js":"30","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\ToastUtil.js":"31","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\axios.js":"32","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\userActions.js":"33","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\appActions.js":"34","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\config.js":"35","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\Auth\\Login.js":"36","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\services\\userService.js":"37","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\services\\index.js":"38","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\ModalAddNewUser.js":"39","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\emitter.js":"40","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\ModalEditUser.js":"41"},{"size":926,"mtime":1699872372619,"results":"42","hashOfConfig":"43"},{"size":1477,"mtime":1699872372620,"results":"44","hashOfConfig":"43"},{"size":5086,"mtime":1699872372624,"results":"45","hashOfConfig":"43"},{"size":1095,"mtime":1699872372617,"results":"46","hashOfConfig":"43"},{"size":3388,"mtime":1700729306192,"results":"47","hashOfConfig":"43"},{"size":789,"mtime":1700119583702,"results":"48","hashOfConfig":"43"},{"size":802,"mtime":1700045952864,"results":"49","hashOfConfig":"43"},{"size":387,"mtime":1700045948420,"results":"50","hashOfConfig":"43"},{"size":639,"mtime":1700119583703,"results":"51","hashOfConfig":"43"},{"size":1297,"mtime":1700649189750,"results":"52","hashOfConfig":"43"},{"size":1350,"mtime":1699872372624,"results":"53","hashOfConfig":"43"},{"size":5752,"mtime":1699872372622,"results":"54","hashOfConfig":"43"},{"size":2282,"mtime":1699872372608,"results":"55","hashOfConfig":"43"},{"size":3862,"mtime":1699872372606,"results":"56","hashOfConfig":"43"},{"size":257,"mtime":1700641391543,"results":"57","hashOfConfig":"43"},{"size":967,"mtime":1699872372629,"results":"58","hashOfConfig":"43"},{"size":837,"mtime":1699872372629,"results":"59","hashOfConfig":"43"},{"size":830,"mtime":1700045608136,"results":"60","hashOfConfig":"43"},{"size":9326,"mtime":1699872372612,"results":"61","hashOfConfig":"43"},{"size":744,"mtime":1700728099323,"results":"62","hashOfConfig":"43"},{"size":3173,"mtime":1699872372607,"results":"63","hashOfConfig":"43"},{"size":5887,"mtime":1700646941133,"results":"64","hashOfConfig":"43"},{"size":573,"mtime":1699872372615,"results":"65","hashOfConfig":"43"},{"size":638,"mtime":1699872372615,"results":"66","hashOfConfig":"43"},{"size":361,"mtime":1699872372625,"results":"67","hashOfConfig":"43"},{"size":59,"mtime":1700045951544,"results":"68","hashOfConfig":"43"},{"size":400,"mtime":1699872372637,"results":"69","hashOfConfig":"43"},{"size":156,"mtime":1699872372635,"results":"70","hashOfConfig":"43"},{"size":684,"mtime":1699872372636,"results":"71","hashOfConfig":"43"},{"size":961,"mtime":1699872372636,"results":"72","hashOfConfig":"43"},{"size":3001,"mtime":1699872372637,"results":"73","hashOfConfig":"43"},{"size":426,"mtime":1700044619830,"results":"74","hashOfConfig":"43"},{"size":417,"mtime":1700045950378,"results":"75","hashOfConfig":"43"},{"size":317,"mtime":1699872372627,"results":"76","hashOfConfig":"43"},{"size":445,"mtime":1699872372612,"results":"77","hashOfConfig":"43"},{"size":4858,"mtime":1700638691564,"results":"78","hashOfConfig":"43"},{"size":763,"mtime":1700646894285,"results":"79","hashOfConfig":"43"},{"size":57,"mtime":1700039795383,"results":"80","hashOfConfig":"43"},{"size":6304,"mtime":1700644296850,"results":"81","hashOfConfig":"43"},{"size":140,"mtime":1700641306745,"results":"82","hashOfConfig":"43"},{"size":5455,"mtime":1700646936667,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1cjqakc",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":1,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\index.js",[],["177","178"],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\redux.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\hoc\\IntlProviderWrapper.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\App.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\hoc\\authentication.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\rootReducer.js",["193","194"],"import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport appReducer from \"./appReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from 'redux-persist';\r\n\r\nconst persistCommonConfig = {\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nconst userPersistConfig = {\r\n    ...persistCommonConfig,\r\n    key: 'user',\r\n    whitelist: ['isLoggedIn', 'userInfo']\r\n};\r\n\r\nexport default (history) => combineReducers({\r\n    router: connectRouter(history),\r\n    user: persistReducer(userPersistConfig, userReducer),\r\n    app: appReducer\r\n})","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\routes\\Home.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\Header\\Header.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\routes\\System.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\routes\\Login.js",["195","196","197"],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\CustomToast.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\ConfirmModal.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\index.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\appReducer.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\adminReducer.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\Navigator.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\Header\\menuApp.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\components\\CustomScrollbars.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\UserManage.js",["198"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport './UserManage.scss';\r\nimport { getAllUsersService, createNewUserService, deleteUserService, editUserService } from '../../services/userService';\r\nimport ModalAddNewUser from './ModalAddNewUser';\r\nimport ModalEditUser from './ModalEditUser';\r\nimport { emitter } from \"../../utils/emitter\"\r\n\r\nclass UserManage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arrUsers: [],\r\n            isOpenModalAddNewUser: false,\r\n            isOpenModalEditUser: false,\r\n            editUser: {}\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers = async () => {\r\n        let response = await getAllUsersService();\r\n        if (response && response.errCode === 0) {\r\n            this.setState({\r\n                arrUsers: response.users\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalAddNewUser: true\r\n        })\r\n    }\r\n\r\n    handleEditUser = (user) => {\r\n        this.setState({\r\n            isOpenModalEditUser: true,\r\n            editUser: user\r\n        })\r\n    }\r\n\r\n    toggelAddNewUser = () => {\r\n        this.setState({\r\n            isOpenModalAddNewUser: !this.state.isOpenModalAddNewUser\r\n        })\r\n    }\r\n\r\n    toggelEditUser = () => {\r\n        this.setState({\r\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\r\n        })\r\n    }\r\n\r\n    createNewUser = async (data) => {\r\n        try {\r\n            let response = await createNewUserService(data);\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.errMessage)\r\n            } else {\r\n                await this.getAllUsers();\r\n                this.setState({\r\n                    isOpenModalAddNewUser: false\r\n                })\r\n                emitter.emit('EVENT_CLEAR_MODAL_DATA')\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    editUser = async (data) => {\r\n        try {\r\n            let response = await editUserService(data);\r\n            if (response && response.errCode !== 0) {\r\n                alert(response.errMessage)\r\n            } else {\r\n                await this.getAllUsers();\r\n                this.setState({\r\n                    isOpenModalEditUser: false\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleDeleteUser = async (userId) => {\r\n        try {\r\n            let response = await deleteUserService(userId);\r\n            if (response && response.errCode === 0) {\r\n                await this.getAllUsers();\r\n            } else {\r\n                alert(response.errMessage)\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let arrUsers = this.state.arrUsers;\r\n        return (\r\n            <div className='user-container'>\r\n                <ModalAddNewUser\r\n                    isOpen={this.state.isOpenModalAddNewUser}\r\n                    toggelAddNewUser={this.toggelAddNewUser}\r\n                    createNewUser={this.createNewUser}\r\n                />\r\n                {\r\n                    this.state.isOpenModalEditUser &&\r\n                    <ModalEditUser\r\n                        isOpen={this.state.isOpenModalEditUser}\r\n                        toggelEditUser={this.toggelEditUser}\r\n                        editUser={this.editUser}\r\n                        currentUser={this.state.editUser}\r\n                    />\r\n                }\r\n\r\n                <div className=\"text-center title\">Manage users</div>\r\n                <div className='mx-1'>\r\n                    <button className='btn btn-primary mx-5 px-3'\r\n                        onClick={() => this.handleAddNewUser()}\r\n                    ><i className='fas fa-plus'></i> Add new user</button>\r\n                </div>\r\n                <div className='users-table mt-3 mx-5'>\r\n                    <table id=\"customers\">\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Phone</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                        {arrUsers && arrUsers.map((item, index) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.firstName}</td>\r\n                                    <td>{item.lastName}</td>\r\n                                    <td>{item.phone}</td>\r\n                                    <td>\r\n                                        <button className='btn-edit'\r\n                                            onClick={() => this.handleEditUser(item)}>\r\n                                            <i className='fas fa-pencil-alt'></i>\r\n                                        </button>\r\n                                        <button className='btn-delete'\r\n                                            onClick={() => this.handleDeleteUser(item.id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\r\n","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\ProductManage.js",["199"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass ProductManage extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\" >Manage products</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductManage);\r\n","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\RegisterPackageGroupOrAcc.js",["200","201"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nclass RegisterPackageGroupOrAcc extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                register package group or account\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPackageGroupOrAcc);\r\n","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\services\\adminService.js",["202"],"import axios from '../axios';\r\nimport * as queryString from 'query-string';\r\n\r\nconst adminService = {\r\n\r\n    /**\r\n     * Đăng nhập hệ thống\r\n     * {\r\n     *  \"username\": \"string\",\r\n     *  \"password\": \"string\"\r\n     * }\r\n     */\r\n    login(loginBody) {\r\n        return axios.post(`/admin/login`, loginBody)\r\n    },\r\n\r\n};\r\n\r\nexport default adminService;",["203","204"],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\index.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\constant.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\CommonUtils.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\KeyCodeUtils.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\LanguageUtils.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\ToastUtil.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\axios.js",["205","206","207"],"import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport config from './config';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    //withCredentials: true\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data;\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\store\\actions\\appActions.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\config.js",["208"],"export default {\r\n    api: {\r\n        API_BASE_URL: \"http://localhost:8080/\",\r\n        ROUTER_BASE_NAME: null,\r\n    },\r\n    app: {\r\n        /**\r\n         * The base URL for all locations. If your app is served from a sub-directory on your server, you'll want to set\r\n         * this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.\r\n         */\r\n        ROUTER_BASE_NAME: null,\r\n    }\r\n};\r\n","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\Auth\\Login.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\services\\userService.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\services\\index.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\ModalAddNewUser.js",["209"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { emitter } from '../../utils/emitter';\r\n\r\nclass ModalUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n        }\r\n\r\n        this.listenToEmitter();\r\n    }\r\n\r\n    listenToEmitter() {\r\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\r\n            this.setState({\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phone: '',\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    toggle = () => {\r\n        this.props.toggelAddNewUser();\r\n    }\r\n\r\n    handleOnChangeInput = (event, type) => {\r\n        let copyState = { ...this.state };\r\n        copyState[type] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n\r\n    handleAddNewUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            //call API\r\n            this.props.createNewUser(this.state);\r\n        }\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'phone'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing required parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                className='model-user-container'\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                size='lg'\r\n                centered\r\n            >\r\n                <ModalHeader toggle={() => { this.toggle() }}>Add new user</ModalHeader>\r\n                <ModalBody>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"input-container\">\r\n                            <label for=\"inputEmail4\">Email</label>\r\n                            <input type=\"email\"\r\n                                class=\"form-control\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"email\") }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"input-container\">\r\n                            <label for=\"inputPassword4\">Password</label>\r\n                            <input type=\"password\"\r\n                                class=\"form-control\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={this.state.password}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"password\") }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputFirstName\">First Name</label>\r\n                        <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"First Name\"\r\n                            value={this.state.firstName}\r\n                            onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                        />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputLastName\">Last Name</label>\r\n                        <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Last Name\"\r\n                            value={this.state.lastName}\r\n                            onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                        />\r\n                    </div>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"inputPhone\">Phone</label>\r\n                            <input type=\"number\"\r\n                                class=\"form-control\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Phone\"\r\n                                value={this.state.phone}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"phone\") }}\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-4\">\r\n                            <label for=\"inputRole\">Role</label>\r\n                            <select name=\"role_id\" class=\"form-control\">\r\n                                <option value=\"1\" selected>User</option>\r\n                                <option value=\"2\">Staff</option>\r\n                                <option value=\"3\">Admin</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"px-3\"\r\n                        color=\"primary\"\r\n                        onClick={() => { this.handleAddNewUser() }}>\r\n                        Add\r\n                    </Button>{' '}\r\n                    <Button className=\"px-3\"\r\n                        color=\"secondary\"\r\n                        onClick={() => { this.toggle() }}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\r\n","C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\utils\\emitter.js",[],"C:\\Users\\qdh1\\Desktop\\Library\\library_management\\frontend\\src\\containers\\System\\ModalEditUser.js",["210"],"import React, { Component } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport _ from 'lodash'\r\n\r\nclass ModalEditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            phone: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = this.props.currentUser;\r\n        if (user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                id: user.id,\r\n                email: user.email,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                phone: user.phone,\r\n            })\r\n        }\r\n    }\r\n\r\n    /* componentDidUpdate() {\r\n        let user = this.props.currentUser;\r\n        if (user && !_.isEmpty(user)) {\r\n            this.setState({\r\n                id: user.id,\r\n                email: user.email,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                phone: user.phone,\r\n            })\r\n        }\r\n    } */\r\n\r\n    toggle = () => {\r\n        this.props.toggelEditUser();\r\n    }\r\n\r\n    handleOnChangeInput = (event, type) => {\r\n        let copyState = { ...this.state };\r\n        copyState[type] = event.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        });\r\n    }\r\n\r\n    handleEditUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid) {\r\n            //call API\r\n            this.props.editUser(this.state);\r\n        }\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrInput = ['email', 'firstName', 'lastName', 'phone'];\r\n        for (let i = 0; i < arrInput.length; i++) {\r\n            if (!this.state[arrInput[i]]) {\r\n                isValid = false;\r\n                alert('Missing required parameter: ' + arrInput[i]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                className='model-user-container'\r\n                isOpen={this.props.isOpen}\r\n                toggle={() => { this.toggle() }}\r\n                size='lg'\r\n                centered\r\n            >\r\n                <ModalHeader toggle={() => { this.toggle() }}>Edit user</ModalHeader>\r\n                <ModalBody>\r\n                    <div class=\"form-row\">\r\n                        <div class=\"input-container\">\r\n                            <label for=\"inputEmail4\">Email</label>\r\n                            <input type=\"email\"\r\n                                class=\"form-control\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={this.state.email}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div class=\"form-group col-md-6\">\r\n                            <label for=\"inputPhone\">Phone</label>\r\n                            <input type=\"number\"\r\n                                class=\"form-control\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Phone\"\r\n                                value={this.state.phone}\r\n                                onChange={(event) => { this.handleOnChangeInput(event, \"phone\") }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputFirstName\">First Name</label>\r\n                        <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"First Name\"\r\n                            value={this.state.firstName}\r\n                            onChange={(event) => { this.handleOnChangeInput(event, \"firstName\") }}\r\n                        />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputLastName\">Last Name</label>\r\n                        <input type=\"text\"\r\n                            class=\"form-control\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Last Name\"\r\n                            value={this.state.lastName}\r\n                            onChange={(event) => { this.handleOnChangeInput(event, \"lastName\") }}\r\n                        />\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"px-3\"\r\n                        color=\"primary\"\r\n                        onClick={() => { this.handleEditUser() }}>\r\n                        Edit\r\n                    </Button>{' '}\r\n                    <Button className=\"px-3\"\r\n                        color=\"secondary\"\r\n                        onClick={() => { this.toggle() }}>\r\n                        Cancel\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\r\n",{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":3,"column":17,"nodeType":"217","messageId":"218","endLine":3,"endColumn":23},{"ruleId":"215","severity":1,"message":"219","line":4,"column":29,"nodeType":"217","messageId":"218","endLine":4,"endColumn":35},{"ruleId":"215","severity":1,"message":"220","line":5,"column":10,"nodeType":"217","messageId":"218","endLine":5,"endColumn":17},{"ruleId":"215","severity":1,"message":"221","line":6,"column":10,"nodeType":"217","messageId":"218","endLine":6,"endColumn":24},{"ruleId":"215","severity":1,"message":"222","line":9,"column":10,"nodeType":"217","messageId":"218","endLine":9,"endColumn":29},{"ruleId":"215","severity":1,"message":"223","line":9,"column":31,"nodeType":"217","messageId":"218","endLine":9,"endColumn":53},{"ruleId":"215","severity":1,"message":"224","line":11,"column":10,"nodeType":"217","messageId":"218","endLine":11,"endColumn":14},{"ruleId":"215","severity":1,"message":"225","line":13,"column":8,"nodeType":"217","messageId":"218","endLine":13,"endColumn":12},{"ruleId":"215","severity":1,"message":"226","line":15,"column":8,"nodeType":"217","messageId":"218","endLine":15,"endColumn":13},{"ruleId":"215","severity":1,"message":"227","line":16,"column":8,"nodeType":"217","messageId":"218","endLine":16,"endColumn":14},{"ruleId":"215","severity":1,"message":"228","line":17,"column":8,"nodeType":"217","messageId":"218","endLine":17,"endColumn":14},{"ruleId":"215","severity":1,"message":"229","line":19,"column":10,"nodeType":"217","messageId":"218","endLine":19,"endColumn":32},{"ruleId":"215","severity":1,"message":"230","line":20,"column":8,"nodeType":"217","messageId":"218","endLine":20,"endColumn":20},{"ruleId":"231","severity":2,"message":"232","line":72,"column":57,"nodeType":"217","messageId":"233","endLine":72,"endColumn":66},{"ruleId":"215","severity":1,"message":"234","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":23,"column":1,"nodeType":"237","endLine":27,"endColumn":3},{"ruleId":"215","severity":1,"message":"238","line":52,"column":17,"nodeType":"217","messageId":"218","endLine":52,"endColumn":25},{"ruleId":"215","severity":1,"message":"239","line":52,"column":27,"nodeType":"217","messageId":"218","endLine":52,"endColumn":35},{"ruleId":"215","severity":1,"message":"240","line":54,"column":36,"nodeType":"217","messageId":"218","endLine":54,"endColumn":50},{"ruleId":"215","severity":1,"message":"241","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},{"ruleId":"215","severity":1,"message":"241","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},{"ruleId":"215","severity":1,"message":"241","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":6,"column":5,"nodeType":"244","messageId":"245","endLine":9,"endColumn":6},{"ruleId":"215","severity":1,"message":"246","line":2,"column":13,"nodeType":"217","messageId":"218","endLine":2,"endColumn":24},{"ruleId":"211","replacedBy":"247"},{"ruleId":"213","replacedBy":"248"},{"ruleId":"215","severity":1,"message":"249","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":9},{"ruleId":"215","severity":1,"message":"250","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":14},{"ruleId":"215","severity":1,"message":"251","line":13,"column":17,"nodeType":"217","messageId":"218","endLine":13,"endColumn":21},{"ruleId":"235","severity":1,"message":"252","line":1,"column":1,"nodeType":"237","endLine":13,"endColumn":3},{"ruleId":"215","severity":1,"message":"241","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},{"ruleId":"215","severity":1,"message":"241","line":2,"column":10,"nodeType":"217","messageId":"218","endLine":2,"endColumn":26},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'history' is defined but never used.","'ToastContainer' is defined but never used.","'userIsAuthenticated' is defined but never used.","'userIsNotAuthenticated' is defined but never used.","'path' is defined but never used.","'Home' is defined but never used.","'Login' is defined but never used.","'Header' is defined but never used.","'System' is defined but never used.","'CustomToastCloseButton' is defined but never used.","'ConfirmModal' is defined but never used.","no-undef","'Dashboard' is not defined.","undef","'adminReducer' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'adminLoginFail' is assigned a value but never used.","'FormattedMessage' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'queryString' is defined but never used.",["253"],["254"],"'_' is defined but never used.","'config' is defined but never used.","'data' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]